{
  "mrtd": "c68518a0ebb42136c12b2275164f8c72f25fa9a34392228687ed6e9caeb9c0f1dbd895e9cf475121c029dc47e70e91fd",
  "rootfs_hash": "355eabbaf84843b85bdfba348baf46dc0f3c4e02326f0b23ff124e36bb053327c2f78d745391b5e9da692472be851d74",
  "rtmr0": "79207fa707c5bbf697d579bbd44c2ba14f8565d528aff0de407c58fd34815b67a35cfbb0a0d996b1c7b911a2c8ae806c",
  "rtmr1": "154e08f5c1f7b1fce4cbfe1c14f3ba67b70044ede2751487279cd1f2e4239dee99a6d45e24ebde6b6a6f5ae49878e0e6",
  "rtmr2": "9edcd363660e85b71c318324996dda756c372d9f6960edbfa863b1e684822eb48dd95e218ae2b78e51ef97f3b8f5c9dc",
  "rtmr3": "f8c92cc9f4baa0da85825e28316673657be77219687b83d68099caafac7d1d357d52011777d715869f7bbb08cd564584",
  "event_log": [
    {
      "imr": 0,
      "event_type": 2147483659,
      "digest": "02a008e63d55a77823c04a5513a5810d4e592dc41bf2596267c09eae5d4b4e3b329ae614973fb192297d8833d37a08fd",
      "event": "",
      "event_payload": "095464785461626c65000100000000000000af96bb93f2b9b84e9462e0ba745642360090800000000000"
    },
    {
      "imr": 0,
      "event_type": 2147483658,
      "digest": "344bc51c980ba621aaa00da3ed7436f7d6e549197dfe699515dfa2c6583d95e6412af21c097d473155875ffd561d6790",
      "event": "",
      "event_payload": "2946762858585858585858582d585858582d585858582d585858582d58585858585858585858585829000000c0ff000000000040080000000000"
    },
    {
      "imr": 0,
      "event_type": 2147483649,
      "digest": "9dc3a1f80bcec915391dcda5ffbb15e7419f77eab462bbf72b42166fb70d50325e37b36f93537a863769bcf9bedae6fb",
      "event": "",
      "event_payload": "61dfe48bca93d211aa0d00e098032b8c0a00000000000000000000000000000053006500630075007200650042006f006f007400"
    },
    {
      "imr": 0,
      "event_type": 2147483649,
      "digest": "6f2e3cbc14f9def86980f5f66fd85e99d63e69a73014ed8a5633ce56eca5b64b692108c56110e22acadcef58c3250f1b",
      "event": "",
      "event_payload": "61dfe48bca93d211aa0d00e098032b8c0200000000000000000000000000000050004b00"
    },
    {
      "imr": 0,
      "event_type": 2147483649,
      "digest": "d607c0efb41c0d757d69bca0615c3a9ac0b1db06c557d992e906c6b7dee40e0e031640c7bfd7bcd35844ef9edeadc6f9",
      "event": "",
      "event_payload": "61dfe48bca93d211aa0d00e098032b8c030000000000000000000000000000004b0045004b00"
    },
    {
      "imr": 0,
      "event_type": 2147483649,
      "digest": "08a74f8963b337acb6c93682f934496373679dd26af1089cb4eaf0c30cf260a12e814856385ab8843e56a9acea19e127",
      "event": "",
      "event_payload": "cbb219d73a3d9645a3bcdad00e67656f0200000000000000000000000000000064006200"
    },
    {
      "imr": 0,
      "event_type": 2147483649,
      "digest": "18cc6e01f0c6ea99aa23f8a280423e94ad81d96d0aeb5180504fc0f7a40cb3619dd39bd6a95ec1680a86ed6ab0f9828d",
      "event": "",
      "event_payload": "cbb219d73a3d9645a3bcdad00e67656f03000000000000000000000000000000640062007800"
    },
    {
      "imr": 0,
      "event_type": 4,
      "digest": "394341b7182cd227c5c6b07ef8000cdfd86136c4292b8e576573ad7ed9ae41019f5818b4b971c9effc60e1ad9f1289f0",
      "event": "",
      "event_payload": "00000000"
    },
    {
      "imr": 0,
      "event_type": 10,
      "digest": "142aa9710a7187d649bfafab0a4226e554859c7fb0cd3e6707f31291e332e399b4ae8f851876ef0af8e607a59b60cc8e",
      "event": "",
      "event_payload": "414350492044415441"
    },
    {
      "imr": 0,
      "event_type": 10,
      "digest": "07d867a2ead8d8e3b1240f17e461089b819ab63ac34eff3b29459445c67409c2342dfdc9335d2335a5aaf591fe1483e1",
      "event": "",
      "event_payload": "414350492044415441"
    },
    {
      "imr": 0,
      "event_type": 10,
      "digest": "da8447b3b4ae0110934f6b7fb9cb017962243eb62e3a971243fde4fd878f26f6ead8e59eba4a1a5b2211a5073cd66506",
      "event": "",
      "event_payload": "414350492044415441"
    },
    {
      "imr": 1,
      "event_type": 2147483651,
      "digest": "b8420535898e24a6abef877153ac1103a695ed07ab9c6c74182d865a560b3b587a34d4bfdc671a505def683cc7bc7596",
      "event": "",
      "event_payload": "18e0427b0000000000f4b3000000000000000000000000002a000000000000000403140072f728144ab61e44b8c39ebdd7f893c7040412006b00650072006e0065006c0000007fff0400"
    },
    {
      "imr": 0,
      "event_type": 2147483650,
      "digest": "1dd6f7b457ad880d840d41c961283bab688e94e4b59359ea45686581e90feccea3c624b1226113f824f315eb60ae0a7c",
      "event": "",
      "event_payload": "61dfe48bca93d211aa0d00e098032b8c0900000000000000020000000000000042006f006f0074004f0072006400650072000000"
    },
    {
      "imr": 0,
      "event_type": 2147483650,
      "digest": "23ada07f5261f12f34a0bd8e46760962d6b4d576a416f1fea1c64bc656b1d28eacf7047ae6e967c58fd2a98bfa74c298",
      "event": "",
      "event_payload": "61dfe48bca93d211aa0d00e098032b8c08000000000000003e0000000000000042006f006f0074003000300030003000090100002c0055006900410070007000000004071400c9bdb87cebf8344faaea3ee4af6516a10406140021aa2c4614760345836e8ab6f46623317fff0400"
    },
    {
      "imr": 1,
      "event_type": 2147483655,
      "digest": "77a0dab2312b4e1e57a84d865a21e5b2ee8d677a21012ada819d0a98988078d3d740f6346bfe0abaa938ca20439a8d71",
      "event": "",
      "event_payload": "43616c6c696e6720454649204170706c69636174696f6e2066726f6d20426f6f74204f7074696f6e"
    },
    {
      "imr": 1,
      "event_type": 4,
      "digest": "394341b7182cd227c5c6b07ef8000cdfd86136c4292b8e576573ad7ed9ae41019f5818b4b971c9effc60e1ad9f1289f0",
      "event": "",
      "event_payload": "00000000"
    },
    {
      "imr": 2,
      "event_type": 6,
      "digest": "a68ac6d65dd62f392826c2ae44f6846363ced3418c96574b3e168de9205c8553b8198c3b9d206bc432d70a923c25b098",
      "event": "",
      "event_payload": "ed223b8f1a0000004c4f414445445f494d4147453a3a4c6f61644f7074696f6e7300"
    },
    {
      "imr": 2,
      "event_type": 6,
      "digest": "41ee4a6d142b51085c720bad4170207359538d9785391ce10b17536153ea5ba49edaa5a8c36f9f081fdf1b7aeb0ce3f0",
      "event": "",
      "event_payload": "ec223b8f0d0000004c696e757820696e6974726400"
    },
    {
      "imr": 1,
      "event_type": 2147483655,
      "digest": "214b0bef1379756011344877743fdc2a5382bac6e70362d624ccf3f654407c1b4badf7d8f9295dd3dabdef65b27677e0",
      "event": "",
      "event_payload": "4578697420426f6f7420536572766963657320496e766f636174696f6e"
    },
    {
      "imr": 1,
      "event_type": 2147483655,
      "digest": "0a2e01c85deae718a530ad8c6d20a84009babe6c8989269e950d8cf440c6e997695e64d455c4174a652cd080f6230b74",
      "event": "",
      "event_payload": "4578697420426f6f742053657276696365732052657475726e656420776974682053756363657373"
    },
    {
      "imr": 3,
      "event_type": 134217729,
      "digest": "355eabbaf84843b85bdfba348baf46dc0f3c4e02326f0b23ff124e36bb053327c2f78d745391b5e9da692472be851d74",
      "event": "rootfs-hash",
      "event_payload": "8b32065c2f0e77328fafc18f784b3f0bb02239e4a0dc2e2ebc1918e6a54b9cce"
    },
    {
      "imr": 3,
      "event_type": 134217729,
      "digest": "b6ad74f6c161e210edc79e8f036301b26fb83ffebc2d70b358616c06cf4c548ed79c6c4b1df06d7d10527ec8c2b5e8b4",
      "event": "app-id",
      "event_payload": "17285b1c7797e193c3e876621e9755cc0c07ee31"
    },
    {
      "imr": 3,
      "event_type": 134217729,
      "digest": "3997395cf5dbdbe20a74b3aa348e25c8db36ee336cf601d546e5b83d899f8aae6ab351d95c7d5dc4e000121c7fc76b75",
      "event": "compose-hash",
      "event_payload": "17285b1c7797e193c3e876621e9755cc0c07ee31225638978d55bb2d50f8f5f5"
    },
    {
      "imr": 3,
      "event_type": 134217729,
      "digest": "5b6a576d1da40f04179ad469e00f90a1c0044bc9e8472d0da2776acb108dc98a73560d42cea6b8b763eb4a0e6d4d82d5",
      "event": "ca-cert-hash",
      "event_payload": "d2d9c7c29e3f18e69cba87438cef21eea084c2110858230cd39c5decc629a958"
    },
    {
      "imr": 3,
      "event_type": 134217729,
      "digest": "9d1db4c5fd07b83c9a6f5fb67a5b201d704e1dca4fdc57739c03454423375bdd07e7106aca1d80785ad81f3d45ba66d8",
      "event": "instance-id",
      "event_payload": "ac488e879344f8dd58d29caaa01635e5fea6eb66"
    }
  ],
  "app_compose": "{\n    \"bash_script\":null,\n    \"docker_compose_file\":\"version: '3.8'\\n\\nservices:\\n  cvm_runner:\\n    image: robortyan/nearai_cvm_runner:latest@sha256:a27359cd0d747ae62300649e959c02707d70a9fb0900a9771d1f6f9311e89c3f\\n    platform: linux/amd64\\n    ports:\\n      - \\\"8001:443\\\"\\n      # - \\\"8002:443\\\"\\n      # - \\\"8003:443\\\"\\n    environment:\\n      RUNNER_API_KEY: ${RUNNER_API_KEY:-\\\"custom-local-runner\\\"}\\n      DD_APM_ENABLED: false\\n      DD_LOGS_ENABLED: false\\n      ACCOUNT_ID: ${ACCOUNT_ID}\\n      USE_AGENT_CACHE: ${USE_AGENT_CACHE:-true}\\n    restart: unless-stopped\\n    deploy:\\n      # replicas: 3\\n      resources:\\n        limits:\\n          cpus: '2'\\n          memory: 2G\\n        reservations:\\n          cpus: '1'\\n          memory: 1G\\n    volumes:\\n      - /var/run/tappd.sock:/var/run/tappd.sock\\n\",\n    \"docker_config\":{\n        \"password\":\"\",\n        \"registry\":null,\n        \"username\":\"\"\n    },\n    \"features\":[\n        \"kms\",\n        \"tproxy-net\"\n    ],\n    \"kms_enabled\":true,\n    \"manifest_version\":2,\n    \"name\":\"nearai-cvm-runner-1\",\n    \"pre_launch_script\":\"\\n#!/bin/bash\\necho \\\"----------------------------------------------\\\"\\necho \\\"Running Phala Cloud Pre-Launch Script v0.0.2\\\"\\necho \\\"----------------------------------------------\\\"\\nset -e\\n\\n# Function: Perform Docker cleanup\\nperform_cleanup() {\\n    echo \\\"Pruning unused images\\\"\\n    docker image prune -af\\n    echo \\\"Pruning unused volumes\\\"\\n    docker volume prune -f\\n}\\n\\n# Function: Check Docker login status without exposing credentials\\ncheck_docker_login() {\\n    # Try to verify login status without exposing credentials\\n    if docker info 2>/dev/null | grep -q \\\"Username\\\"; then\\n        return 0\\n    else\\n        return 1\\n    fi\\n}\\n\\n# Function: Check AWS ECR login status\\ncheck_ecr_login() {\\n    # Check if we can access the registry without exposing credentials\\n    if aws ecr get-authorization-token --region $DSTACK_AWS_REGION &>/dev/null; then\\n        return 0\\n    else\\n        return 1\\n    fi\\n}\\n\\n# Main logic starts here\\necho \\\"Starting login process...\\\"\\n\\n# Check if Docker credentials exist\\nif [[ -n \\\"$DSTACK_DOCKER_USERNAME\\\" && -n \\\"$DSTACK_DOCKER_PASSWORD\\\" ]]; then\\n    echo \\\"Docker credentials found\\\"\\n    \\n    # Check if already logged in\\n    if check_docker_login; then\\n        echo \\\"Already logged in to Docker registry\\\"\\n    else\\n        echo \\\"Logging in to Docker registry...\\\"\\n        # Login without exposing password in process list\\n        if [[ -n \\\"$DSTACK_DOCKER_REGISTRY\\\" ]]; then\\n            echo \\\"$DSTACK_DOCKER_PASSWORD\\\" | docker login -u \\\"$DSTACK_DOCKER_USERNAME\\\" --password-stdin \\\"$DSTACK_DOCKER_REGISTRY\\\"\\n        else\\n            echo \\\"$DSTACK_DOCKER_PASSWORD\\\" | docker login -u \\\"$DSTACK_DOCKER_USERNAME\\\" --password-stdin\\n        fi\\n        \\n        if [ $? -eq 0 ]; then\\n            echo \\\"Docker login successful\\\"\\n        else\\n            echo \\\"Docker login failed\\\"\\n            exit 1\\n        fi\\n    fi\\n# Check if AWS ECR credentials exist\\nelif [[ -n \\\"$DSTACK_AWS_ACCESS_KEY_ID\\\" && -n \\\"$DSTACK_AWS_SECRET_ACCESS_KEY\\\" && -n \\\"$DSTACK_AWS_REGION\\\" && -n \\\"$DSTACK_AWS_ECR_REGISTRY\\\" ]]; then\\n    echo \\\"AWS ECR credentials found\\\"\\n    \\n    # Check if AWS CLI is installed\\n    if ! command -v aws &> /dev/null; then\\n        echo \\\"AWS CLI not installed, installing...\\\"\\n        curl \\\"https://awscli.amazonaws.com/awscli-exe-linux-x86_64-2.24.14.zip\\\" -o \\\"awscliv2.zip\\\"\\n        echo \\\"6ff031a26df7daebbfa3ccddc9af1450 awscliv2.zip\\\" | md5sum -c\\n        if [ $? -ne 0 ]; then\\n            echo \\\"MD5 checksum failed\\\"\\n            exit 1\\n        fi\\n        unzip awscliv2.zip &> /dev/null\\n        ./aws/install\\n        \\n        # Clean up installation files\\n        rm -rf awscliv2.zip aws\\n    else\\n        echo \\\"AWS CLI is already installed: $(which aws)\\\"\\n    fi\\n    \\n    # Configure AWS CLI\\n    aws configure set aws_access_key_id \\\"$DSTACK_AWS_ACCESS_KEY_ID\\\"\\n    aws configure set aws_secret_access_key \\\"$DSTACK_AWS_SECRET_ACCESS_KEY\\\"\\n    aws configure set default.region $DSTACK_AWS_REGION\\n    echo \\\"Logging in to AWS ECR...\\\"\\n    aws ecr get-login-password --region $DSTACK_AWS_REGION | docker login --username AWS --password-stdin \\\"$DSTACK_AWS_ECR_REGISTRY\\\"\\n    if [ $? -eq 0 ]; then\\n        echo \\\"AWS ECR login successful\\\"\\n    else\\n        echo \\\"AWS ECR login failed\\\"\\n        exit 1\\n    fi\\nfi\\n\\nperform_cleanup\\n\\necho \\\"----------------------------------------------\\\"\\necho \\\"Script execution completed\\\"\\necho \\\"----------------------------------------------\\\"\\n\",\n    \"public_logs\":true,\n    \"public_sysinfo\":true,\n    \"runner\":\"docker-compose\",\n    \"salt\":\"82cdd72c-a94a-4e3e-8d39-96f48aaca5bc\",\n    \"tproxy_enabled\":true,\n    \"version\":\"1.0.0\"\n}"
}
